---
title: "Projekt_kod"
format: html
editor: visual
---

# Biblioteki

```{r}
#| message: false
#| warning: false
library(tidyverse)
library(readxl)
library(lmtest)
library(tseries)
library(xtable)
```

# Wczytywanie danych i czyszczenie

```{r}
dane <- read_xlsx("../Ekonometria_projekt/dane/Dane2.xlsx")
dane
```

## Czyszczenie danych

```{r}
dane <- dane %>% 
  rename(y = 3) %>% 
  rename_with(.cols = 4:ncol(.), .fn = ~ paste0("x", seq_along(.))) %>% 
  mutate(
    x4 = round(x4),
    x6 = round(x6),
    x7 = round(x7),
    x8 = round(x8)
  )
dane
```

# Regresja Krokowa

### Krok 1

```{r}
model <- lm(y ~ x1 + x2 + x3 + x4 + x5 + x6 + x7 + x8 + x9, data = dane)
summary(model) #%>% xtable()
```

### Krok 2

```{r}
model <- lm(y ~ x1 + x2 + x3 + x4 + x5 + x7 + x8 + x9, data = dane)
summary(model) 
```

### Krok 3

```{r}
model <- lm(y ~ x1 + x2 + x3 + x4 + x5 + x7 + x8, data = dane)
summary(model) 
```

### Krok 4

```{r}
model <- lm(y ~ x1 + x2 + x3 + x5 + x7 + x8, data = dane)
summary(model)
```

### Krok 5

```{r}
model <- lm(y ~ x1 + x2 + x5 + x7 + x8, data = dane)
summary(model)
```

### Krok 6

```{r}
model_koncowy <- lm(y ~ x1 + x5 + x7 + x8, data = dane)
summary(model_koncowy)
```

# Modele jednowymiarowe i trendy

### Dla x1 trendy

```{r}
wykres1 <- ggplot(dane, aes(y = x1, x = Lata))+
  geom_point()+
  geom_smooth(method = "lm", se = F)+
  theme_minimal()
ggsave("wykres1.png", plot = wykres1, width = 8, height = 6, dpi = 300)
wykres1
```

### Dla x1 model

```{r}
model_x1 <- lm(Lata~x1, data = dane)
ggplot(dane, aes(x = Lata, y = x1))+
  geom_point()+
  geom_smooth(method = "lm", se = F)
summary(model_x1) %>% 
  xtable()
```

### Dla x5 model

```{r}
model_x2 <- lm(Lata~x5, data = dane)
summary(model_x2) %>% 
  xtable()
```

### Dla x2 wykres

```{r}
wykres2 <- ggplot(dane, aes(y = x5, x = Lata))+
  geom_point()+
  geom_smooth(method = "lm", se = F)+
  theme_minimal()
wykres2
#ggsave("wykres2.png", plot = wykres2, width = 8, height = 6, dpi = 300)
```

```{r}
options(scipen = 999)
dane$y * 1e9
summary(lm(y~x8, data = dane))
ggplot(dane, aes(y = y, x = x8))+
  geom_point()+
  geom_smooth(method = "lm", se = F)+  # normalny zapis
  scale_y_continuous(limits = range(dane$y))+
  theme_minimal()
```

# Testy

### Liniowość – Test RESEST

```{r}
reset <- resettest(model_koncowy) 

reset_df <- data.frame(
  "Statystyka testowa" = reset$statistic,
  "Wartość p" = reset$p.value,
  "Stopnie swobody 1" = reset$parameter[1],
  "Stopnie swobody 2" = reset$parameter[2],
  check.names = FALSE
)
#xtable(reset_df, caption = "Wyniki testu RESET dla modelu końcowego", digits = 4)
reset
```

### Homoskedastyczność - Test Goldfelda-Quandta

```{r}
gq <- gqtest(model_koncowy)


gq_df <- data.frame(
  `statystyka` = gq$statistic,
  `df1` = gq$parameter[1],
  `df2` = gq$parameter[2],
  `p-wartość` = gq$p.value,
  check.names = FALSE
)


xtable(gq_df, caption = "Test Goldfelda–Quandta", digits = 4)
gq
```

### Autokorelacja składników losowych – Test Durbina-Watsona

```{r}
dwtest(model_koncowy)
```

### Rozkład normalny reszt – Test JBT

```{r}
reszty <- resid(model_koncowy)
jarque.bera.test(reszty)
```

# Badanie dobroci modelu

### Dobroć dopasowania modelu do obserwacji

### Współczynnik zmienności losowej – siła wpływu czynnika losowego

### Istotność prametrów – pamiętać
